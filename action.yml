# action.yml
name: 'Update-docker-image'
author: https://github.com/qcastel
description: 'Update docker images in external repository'
branding:
  color: blue
  icon: unlock
inputs:
  branch-name:
    description: 'The branch to push to'
    required: false
    default: 'master'

  ssh-private-key:
    description: 'The SSH private key used'
    required: false

  git-release-bot-name:
    description: 'The git user name for committing'
    required: false
    default: 'release-bot'
  git-release-bot-email:
    description: 'The git user email for committing'
    required: false
    default: 'release-bot@github.com'

  repository:
    description: 'git repository where to run the upgrade'
    required: true

  images-names:
    description: 'List of docker images to deploy, separated by a ;'
    required: true

  version:
    description: 'Customise the version'
    required: true

  version-from:
    description: 'Customise where to get the version'
    required: true
    default: 'tag'

  gpg-enabled:
    description: 'Enable gpg signing'
    required: false
    default: false
  gpg-key-id:
    description: 'The GPG key ID'
    required: false
  gpg-key:
    description: 'The GPG key'
    required: false
  gpg-passphrase:
    description: 'The GPG passphrase'
    required: false

runs:
  using: 'docker'
  image: 'Dockerfile'
  args: 
    - release-github-actions.sh
  env:
    SSH_PRIVATE_KEY: ${{ inputs.ssh-private-key }}
    SSH_ROOT_FOLDER: /root/.ssh

    GIT_RELEASE_BOT_NAME: ${{ inputs.git-release-bot-name }}
    GIT_RELEASE_BOT_EMAIL: ${{ inputs.git-release-bot-email }}

    BRANCH_NAME: ${{ inputs.branch-name }}

    REPO: ${{ inputs.repository }}

    IMAGES_NAMES: ${{ inputs.images-names }}

    VERSION: ${{ inputs.version }}
    VERSION_FROM: ${{ inputs.version-from }}

    GPG_ENABLED: ${{ inputs.gpg-enabled }}
    GPG_KEY_ID: ${{ inputs.gpg-key-id }}
    GPG_KEY: ${{ inputs.gpg-key }}
    GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}